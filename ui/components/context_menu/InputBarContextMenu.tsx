import { FiBold, FiItalic, FiCode, FiLink, FiList } from 'react-icons/fi'
import {
  Dropdown,
  DropdownTrigger,
  DropdownMenu,
  DropdownItem,
  DropdownSection,
} from '@heroui/react'
import ReactDOM from 'react-dom'

interface InputBarContextMenuProps {
  position: { x: number; y: number } | null
  onFormatAction: (action: string) => void
  menuRef?: React.RefObject<HTMLDivElement> // –°–¥–µ–ª–∞–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å React Portal
}

export default function InputBarContextMenu({
  position,
  onFormatAction,
}: InputBarContextMenuProps) {
  if (!position) return null

  const handleAction = (action: string) => {
    onFormatAction(action)
  }

  // –°–æ–∑–¥–∞–¥–∏–º –Ω–µ–≤–∏–¥–∏–º—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –≤ –ø–æ–∑–∏—Ü–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
  const customTrigger = (
    <div
      className="fixed w-0 h-0 p-0 m-0 border-none"
      style={{
        left: `${position.x}px`,
        top: `${position.y}px`,
      }}
    />
  )

  return ReactDOM.createPortal(
    <Dropdown
      isOpen={!!position}
      placement="bottom-start"
      offset={-100}
      shouldCloseOnBlur
    >
      <DropdownTrigger>{customTrigger}</DropdownTrigger>
      <DropdownMenu aria-label="Formatting options" variant="faded">
        <DropdownSection showDivider title="Actions">
          <DropdownItem
            key="bold"
            startContent={<FiBold />}
            onPress={() => handleAction('bold')}
          >
            –ñ–∏—Ä–Ω—ã–π
          </DropdownItem>
          <DropdownItem
            key="italic"
            startContent={<FiItalic />}
            onPress={() => handleAction('italic')}
          >
            –ö—É—Ä—Å–∏–≤
          </DropdownItem>
          <DropdownItem
            key="code"
            startContent={<FiCode />}
            onPress={() => handleAction('code')}
          >
            –ö–æ–¥
          </DropdownItem>
          <DropdownItem
            key="link"
            startContent={<FiLink />}
            onPress={() => handleAction('link')}
          >
            –°—Å—ã–ª–∫–∞
          </DropdownItem>
          <DropdownItem
            key="list"
            startContent={<FiList />}
            onPress={() => handleAction('list')}
          >
            –°–ø–∏—Å–æ–∫
          </DropdownItem>
        </DropdownSection>
        <DropdownSection showDivider title="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ">
          <DropdownItem
            key="codeBlock"
            startContent={<span className="font-mono text-sm">{'{ }'}</span>}
            onPress={() => handleAction('codeBlock')}
          >
            –ë–ª–æ–∫ –∫–æ–¥–∞
          </DropdownItem>
          <DropdownItem
            key="math"
            startContent={<span className="font-serif">‚àë</span>}
            onPress={() => handleAction('math')}
          >
            –§–æ—Ä–º—É–ª–∞ (–∏–Ω–ª–∞–π–Ω)
          </DropdownItem>
          <DropdownItem
            key="mathBlock"
            startContent={<span className="font-serif">‚à´</span>}
            onPress={() => handleAction('mathBlock')}
          >
            –§–æ—Ä–º—É–ª–∞ (–±–ª–æ–∫)
          </DropdownItem>
          <DropdownItem
            key="table"
            startContent={<span className="font-mono">‚äû</span>}
            onPress={() => handleAction('table')}
          >
            –¢–∞–±–ª–∏—Ü–∞
          </DropdownItem>
          <DropdownItem
            key="mermaid"
            startContent={<span>üìä</span>}
            onPress={() => handleAction('mermaid')}
          >
            –î–∏–∞–≥—Ä–∞–º–º–∞
          </DropdownItem>
        </DropdownSection>
      </DropdownMenu>
    </Dropdown>,
    document.body,
  )
}
